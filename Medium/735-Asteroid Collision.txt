// Asteroid Collision

class Solution {
    public int[] asteroidCollision(int[] asteroids) {
        int n = asteroids.length;
        Stack<Integer> st = new Stack<>();
        for(int i = 0; i < n; i++){
            if(asteroids[i] > 0) st.push(asteroids[i]);
            else{
                while(!st.isEmpty() && st.peek() > 0 &&
                 st.peek() < Math.abs(asteroids[i])) st.pop();
                 if(!st.isEmpty() && st.peek() == Math.abs(asteroids[i])) st.pop();
                 else if(st.isEmpty() || st.peek() < 0) st.push(asteroids[i]);
            }
        }

        int[] res = new int[st.size()];
        int i = 0;
        while(!st.isEmpty()) res[i++] = st.pop();

        int str = 0, end = res.length - 1;
        while(str <= end){
            int temp = res[str];
            res[str] = res[end];
            res[end] = temp;
            str++; end--;
        }

        return res;
    }
}