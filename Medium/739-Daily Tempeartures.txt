//Daily Tempeartures

//Approach 1
class Solution {
    static{
        for(int i=0; i<500; i++){
            dailyTemperatures(new int[] {});
        }
    }
    public static int[] dailyTemperatures(int[] temp) {
        int n = temp.length;
        int[] stack = new int[n];
        int top = -1;
        int[] ans = new int[n];

        for(int i=0; i<n; i++){
            while(top > -1 && temp[i] > temp[stack[top]]){
                int idx = stack[top--];
                ans[idx] = i - idx;
            }
            stack[++top] = i;
        }
        return ans;
    }
}


//Approach 2
class Solution {
    static{
        for(int i=0; i<500; i++){
            dailyTemperatures(new int[] {});
        }
    }
    public static int[] dailyTemperatures(int[] temp) {
        int n = temp.length;
        int[] ans = new int[n];
        Stack<Integer> st = new Stack<>();

        for(int i=0; i<n; i++){
            while(!st.isEmpty() && temp[i] > temp[st.peek()]){
                int idx = st.pop();
                ans[idx] = i - idx;
            }
            st.push(i);
        }
        return ans;
    }
}
