// Construct Binary Tree from Preorder and Inorder Traversal

class Solution {
    private int find(int[] in, int target, int st, int end){
        for(int i = st; i <= end; i++){
            if(in[i] == target) return i;
        }
        return -1;
    }
    private TreeNode build(int[] pre, int[] in, int st, int end, int idx){
        if(st > end) return null;
        TreeNode root = new TreeNode(pre[idx]);
        int pos = find(in, pre[idx], st, end);
        root.left = build(pre, in, st, pos - 1, idx + 1);
        root.right = build(pre, in, pos + 1, end, idx + (pos - st) + 1);

        return root;
    }
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        int n = preorder.length;
        TreeNode root = build(preorder, inorder, 0, n - 1,0);

        return root;
    }
}