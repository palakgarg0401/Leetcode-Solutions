// Construct Binary Tree from Inorder and Postorder Traversal

class Solution {
    private Map<Integer, Integer> map = new HashMap<>();
    private TreeNode build(int[] in, int[] post, int st, int end, int idx){
        if(st > end) return null;
        TreeNode root = new TreeNode(post[idx]);
        int pos = map.get(post[idx]);
        root.left = build(in, post, st, pos - 1, idx - (end - pos) - 1);
        root.right = build(in, post, pos + 1, end, idx - 1);
        return root;
    }
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        int n = inorder.length;
        for(int i = 0; i < n; i++) map.put(inorder[i], i);

        TreeNode root = build(inorder, postorder, 0, n - 1, n - 1);
        return root;
    }
}