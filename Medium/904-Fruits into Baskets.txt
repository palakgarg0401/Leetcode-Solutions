//Fruits into Baskets

//Approach 1
class Solution {
    public int totalFruit(int[] fruits) {
        Map<Integer, Integer> map = new HashMap<>();
        int n = fruits.length;
        int count = 0, max = 0;
        int i = 0, j = 0;
        while(i < n && j < n){
            map.put(fruits[j], map.getOrDefault(fruits[j], 0) + 1);

            while(map.size() > 2){
                map.put(fruits[i], map.get(fruits[i]) - 1);
                if(map.get(fruits[i]) == 0){
                    map.remove(fruits[i]);
                }
                i++;
            }
            max = Math.max(max, j-i+1);
            
            j++;
        }

        return max;
    }
}


//Approach 2
class Solution {
    public int totalFruit(int[] fruits) {
        int n = fruits.length;
        int[] count = new int[n+5];
        int type = 0, max = 0;
        int i = 0;
        for(int j=0; j<n; j++){
            count[fruits[j]]++;
            if(count[fruits[j]] == 1) type++;
            while(type > 2){
                count[fruits[i]]--;
                if(count[fruits[i]] == 0) type--;
                i++;
            }

            max = Math.max(max, j-i+1);
        }

        return max;
    }
}