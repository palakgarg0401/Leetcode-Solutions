//Maximum Score From Removing Substrings

//Approach 1
class Solution {
    public int maximumGain(String s, int x, int y) {
        if(x > y) {
            return maxScore(s, 'a', 'b', x, y);
        }
        else {
            return maxScore(s, 'b', 'a', y, x);
        }
    }
    private int maxScore(String s, char first, char second, int high, int low){
        Stack<Character> st = new Stack<>();
        int score = 0;

        StringBuilder sb = new StringBuilder();
        for(char ch : s.toCharArray()){
            if(!st.isEmpty() && st.peek() == first && ch == second){
                st.pop();
                score += high;
            }
            else st.push(ch);
        }

        while(!st.isEmpty()) sb.append(st.pop());
        st.clear();

        s = sb.reverse().toString();

        for(char ch : s.toCharArray()){
            if(!st.isEmpty() && st.peek() == second && ch == first){
                st.pop();
                score += low;
            }
            else st.push(ch);
        }

        return score;
    }
}

//Approach 2
class Solution {
    public int maximumGain(String s, int x, int y) {
        int score = 0;
        StringBuilder sb1 = new StringBuilder();
        StringBuilder sb2 = new StringBuilder();

        if(x > y){
            for(char ch : s.toCharArray()){
                int len = sb1.length();
                if(len > 0 && sb1.charAt(len-1) == 'a' && ch == 'b'){
                    sb1.deleteCharAt(len - 1);
                    score += x;
                }
                else sb1.append(ch);
            }
            for(char ch : sb1.toString().toCharArray()){
                int len = sb2.length();
                if(len > 0 && sb2.charAt(len-1) == 'b' && ch == 'a'){
                    sb2.deleteCharAt(len - 1);
                    score += y;
                }
                else sb2.append(ch);
            }
        }
        else {
            for(char ch : s.toCharArray()){
                int len = sb1.length();
                if(len > 0 && sb1.charAt(len-1) == 'b' && ch == 'a'){
                    sb1.deleteCharAt(len - 1);
                    score += y;
                }
                else sb1.append(ch);
            }
            for(char ch : sb1.toString().toCharArray()){
                int len = sb2.length();
                if(len > 0 && sb2.charAt(len-1) == 'a' && ch == 'b'){
                    sb2.deleteCharAt(len - 1);
                    score += x;
                }
                else sb2.append(ch);
            }
        }

        return score;
    }
}