// Unique Paths

class Solution {
    private int path(int[][] maze, int i, int j, int m, int n){
        if(i < 0 || j < 0 || i >= m || j >= n) return 0;
        if(i == m - 1 && j == n - 1) return 1;

        if(maze[i][j] != -1) return maze[i][j];

        int right = path(maze, i, j + 1, m, n);
        int down = path(maze, i + 1, j, m, n);

        return maze[i][j] = right + down;
    }
    public int uniquePaths(int m, int n) {
        int[][] maze = new int[m][n];
        for(int[] row : maze) Arrays.fill(row, -1);
        return path(maze, 0, 0, m, n);
    }
}