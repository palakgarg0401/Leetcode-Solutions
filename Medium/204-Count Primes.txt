// Count Primes

// Approach 1
class Solution {
    public int countPrimes(int n) {
        boolean[] isPrime = new boolean[n];
        Arrays.fill(isPrime, true);

        int count = 0;
        for(int i = 2; i < n; i++) {
            if(isPrime[i]) {
                count++;
                for(int j = i * 2; j < n; j += i) {
                    isPrime[j] = false;
                }
            }
        }

        return count;
    }
}

// Approach 2
class Solution {
    public int countPrimes(int n) {
        boolean[] isPrime = new boolean[n];
        
        int i = 2, count = 0;
        for(; i * i <= n; i++){
            if(!isPrime[i]){
                for(int j = i * i; j < n; j += i){
                    isPrime[j] = true;
                }
                count++;
            }
        }

        for(; i < n; i++){
            if(!isPrime[i]) count++;
        }

        return count;
    }
}