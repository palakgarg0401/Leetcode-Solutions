//Valid Parentheses

//Approach 1
class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for(char ch : s.toCharArray()) {
            if(ch == '(' || ch == '{' || ch == '[') stack.push(ch);
            else {
                if(stack.isEmpty()) return false;
                char top = stack.pop();
                if((ch == ')' && top != '(') || (ch == '}' && top != '{') || (ch == ']' && top != '[')) {
                    return false;
                }
            }
        }
        return stack.isEmpty();
    }
}



//Approach 2
class Solution {
    public boolean isValid(String s) {
        int[] arr = new int[s.length()];
        int i = 0;
        for(char ch : s.toCharArray()) {
            if(ch == '(') arr[i++] = ch;
            else if(ch == '{') arr[i++] = ch;
            else if(ch == '[') arr[i++] = ch;
            else {
                if(i == 0) return false;
                if(ch == ')' && arr[i-1] == '(') i--;
                else if(ch == '}' && arr[i-1] == '{') i--;
                else if(ch == ']' && arr[i-1] == '[') i--;
                else return false;
            }
        }
        return i == 0;
    }
}