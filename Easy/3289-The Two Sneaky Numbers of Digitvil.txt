// The Two Sneaky Numbers of Digitville

// Approach 1
class Solution {
    public int[] getSneakyNumbers(int[] nums) {
        Map<Integer, Integer> map = new HashMap<>();
        for(int n : nums){
            map.put(n, map.getOrDefault(n, 0) + 1);
        }
        int[] res = new int[2];
        int i = 0;
        for(int key : map.keySet()){
            if(map.get(key) == 2) res[i++] = key;
        }

        return res;
    }
}

// Approach 2
class Solution {
    public int[] getSneakyNumbers(int[] nums) {
        int[] res = new int[2];
        int k = 0;
        for(int i = 0; i < nums.length; i++){
            for(int j = i + 1; j < nums.length; j++){
                if(nums[i] == nums[j]){
                    res[k++] = nums[j];
                    break;
                }
            }
        }

        return res;
    }
}