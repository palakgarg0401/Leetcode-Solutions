//Reverse Linked List

//Approach 1
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;

        ListNode newHead = reverseList(head.next);

        head.next.next = head;
        head.next = null;

        return newHead;
    }
}


//Approach 2
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head == null || head.next == null) return head;

        int len = 0;
        ListNode temp = head;
        while(temp != null){
            len++;
            temp = temp.next;
        }

        int[] arr = new int[len];
        temp = head;
        int i = 0;
        while(temp != null){
            arr[i++] = temp.val;
            temp = temp.next;
        }

        temp = head;
        i = len - 1;
        while(temp != null){
            temp.val = arr[i--];
            temp = temp.next;
        }
        return head;
    }
}